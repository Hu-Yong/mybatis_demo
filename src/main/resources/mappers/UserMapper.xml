<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.beatrace.mybatis.mapper.UserMapper">

    <!--int insertUser();-->
<!--    <insert id="insertUser">-->
<!--        insert into t_user values(null, "beatrace", "356",24,'m',"475893@qq.com")-->
<!--    </insert>-->

    <!-- User getUserBuId();-->
    <select id="getUserById" resultType="User">
        select * from t_user where id = 4
    </select>

    <!--    int updateUser();-->
    <update id="updateUser">
        update t_user set username = '张三' where id = 4
    </update>

    <!--List<User> selectAll();-->
    <select id="selectAll" resultType="User">
        select * from t_user
    </select>

    <!--    User getUserByUsername(String username);-->
    <select id="getUserByUsername" resultType="User">
        select * from t_user where username = '${username}'
    </select>

    <!--User checkLogin(String username,String password);-->
    <select id="checkLogin" resultType="User">
        <!--
               写：select * from t_user where username = #{username} and password = #{password}
               会报错：Parameter 'username' not found. Available parameters are [arg1, arg0, param1, param2]
               因为sql语句没有解析成功-->
        <!--以map集合形式存储，arg0->param1, arg1->param2，这时直接用键arg访问就好了，用param访问也行。
		以下两种方式选一个：-->
         select * from t_user where username = '${param1}' and password = '${param2}'
    </select>

    <!--    checkLoginByMap(Map<String, Object> map);-->
    <select id="checkLoginByMap" resultType="User">
        select * from t_user where username = #{username} and password = #{password}
    </select>

    <!--        int insertUser(User user);-->
    <!--    找到相对应的get方法，如username->找getUsername()，看get/set方法-->
    <insert id="insertUser">
        insert into t_user values(null, #{username}, #{password}, #{age}, #{gender}, #{email})
    </insert>


    <!--    以@Param的值为键，参数为值; 或以"param1"/"param2"为键，参数为值-->
    <!--    User checkLoginByParam(@Param("username") String username, @Param("password") String password);-->
    <select id="checkLoginByParam" resultType="User">
        select * from t_user where username = #{username} and password = #{password}
    </select>

    <!--    List<User> getUserByLike(@Param("username") String username);-->
    <!--    使用#{}，因为包括在单引号里，会被认为是字符串的一部分:select * from t_user where username like '%#{username}%'-->
    <!--    三种方式-->
    <select id="getUserByLike" resultType="User">
        <!--  第一种 select * from t_user where username like '%${username}%'
          第二种 select * from t_user where username like concat('%', #{username}, '%')-->
        <!--第三种 推荐使用-->
        select * from t_user where username like "%"#{username}"%"
    </select>

    <!--    int deleteMore(String ids);-->
    <!--    不能使用#{}，因为他会自动添加单引号，变成delete from t_user where id in ('9，10，11')-->
    <delete id="deleteMore">
        delete from t_user where id in (${ids})
    </delete>


    <!--    List<User> getUserByTableName(String tableName);-->
    <select id="getUserByTableName" resultType="User">
        select * from ${tableName}
    </select>


    <!--    void insetUser(User user);-->
    <!--    方法的返回值是固定的
            useGeneratedKeys    设置当前标签中的sql使用了自增的主键 (id)
            keyProperty         将自增的主键的值 赋值给 传输到映射文件中的参数的某个属性（user.id）
    -->
    <insert id="insetUser2" useGeneratedKeys="true" keyProperty="id">
        insert into t_user values(null, #{username}, #{password},#{age},#{gender},#{email})
    </insert>


</mapper>
